version: '2'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  db:
    container_name: db
    networks:
      - tomernet
    image: postgres
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: monitoring
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
  web:
    image: alerta/alerta-web
    # volumes:
      # - $PWD/config/config.json:/web/config.json
    ports:
      - 8080:8080
    networks:
      - tomernet
    depends_on:
      - db
    links:
        - db:db
    environment:
      - DEBUG=1  # remove this line to turn DEBUG off
      - DATABASE_URL=postgres://postgres:postgres@db:5432/monitoring
      - AUTH_REQUIRED=True
      - ADMIN_USERS=admin@alerta.io,devops@alerta.io
      - ADMIN_PASSWORD=super-secret # default is "alerta"
      - ADMIN_KEY=demo-key  # assigned to first user in ADMIN_USERS
      - ADMIN_KEY_MAXAGE=500
      - PLUGINS=remote_ip,reject,heartbeat,blackout,normalise,enhance,slack,prometheus
    restart: always

  prometheus:
    image: prom/prometheus:v2.36.1
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - tomernet      
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    restart: always
    deploy:
      mode: global

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - tomernet      
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager:v0.24.0
    ports:
      - 9093:9093
    networks:
      - tomernet      
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    deploy:
      mode: global

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - tomernet      
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana:8.5.5
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - tomernet      
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - config.monitoring

  blackbox_exporter:
    image: prom/blackbox-exporter:v0.21.0
    ports:
      - 9115:9115
    networks:
      - tomernet      
    volumes:
      - ./blackboxexporter/:/etc/blackboxexporter/
    command:
      - '--config.file=/etc/blackboxexporter/config.yml'
    restart: always


networks:
    tomernet:
        driver: bridge